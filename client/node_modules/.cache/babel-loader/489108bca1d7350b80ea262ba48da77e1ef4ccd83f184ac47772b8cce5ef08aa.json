{"ast":null,"code":"export const tripService = {\n  // Get trip details\n  async getTripById(id) {\n    try {\n      // Simulating API call with timeout\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      return {\n        id: 1,\n        name: \"Mountain Hiking Adventure\",\n        description: \"Experience the thrill of mountain hiking in the Swiss Alps with our expert guides. This trip includes accommodation, meals, and guided tours of the most scenic routes.\",\n        dates: \"Jan 15-22, 2025\",\n        price: 1299,\n        availableSlots: 10,\n        duration: \"7 days\",\n        difficulty: \"Moderate\",\n        location: \"Swiss Alps\",\n        included: [\"Professional guide\", \"Hotel accommodation\", \"All meals\", \"Transportation\", \"Safety equipment\"],\n        cancellationPolicy: {\n          fullRefund: 15,\n          halfRefund: 7,\n          noRefund: 0\n        },\n        itinerary: [{\n          day: 1,\n          title: \"Arrival and Orientation\",\n          description: \"Arrive in Zurich, transfer to hotel, welcome dinner and trip briefing\"\n        }, {\n          day: 2,\n          title: \"First Hike\",\n          description: \"Begin with a moderate trek to acclimatize to the altitude\"\n        }]\n      };\n    } catch (error) {\n      throw new Error('Failed to fetch trip details');\n    }\n  },\n  async createBooking(tripId, bookingData) {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      return {\n        id: Math.random().toString(36).substr(2, 9),\n        tripId,\n        ...bookingData,\n        status: 'Confirmed'\n      };\n    } catch (error) {\n      throw new Error('Failed to create booking');\n    }\n  }\n};","map":{"version":3,"names":["tripService","getTripById","id","Promise","resolve","setTimeout","name","description","dates","price","availableSlots","duration","difficulty","location","included","cancellationPolicy","fullRefund","halfRefund","noRefund","itinerary","day","title","error","Error","createBooking","tripId","bookingData","Math","random","toString","substr","status"],"sources":["C:/Users/Garg/OneDrive/Desktop/exploro/exploro-travel/src/services/api.js"],"sourcesContent":["\r\n\r\nexport const tripService = {\r\n  // Get trip details\r\n  async getTripById(id) {\r\n    try {\r\n      // Simulating API call with timeout\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      return { \r\n        id: 1,\r\n        name: \"Mountain Hiking Adventure\",\r\n        description: \"Experience the thrill of mountain hiking in the Swiss Alps with our expert guides. This trip includes accommodation, meals, and guided tours of the most scenic routes.\",\r\n        dates: \"Jan 15-22, 2025\",\r\n        price: 1299,\r\n        availableSlots: 10,\r\n        duration: \"7 days\",\r\n        difficulty: \"Moderate\",\r\n        location: \"Swiss Alps\",\r\n        included: [\r\n          \"Professional guide\",\r\n          \"Hotel accommodation\",\r\n          \"All meals\",\r\n          \"Transportation\",\r\n          \"Safety equipment\"\r\n        ],\r\n        cancellationPolicy: {\r\n          fullRefund: 15,\r\n          halfRefund: 7,\r\n          noRefund: 0\r\n        },\r\n        itinerary: [\r\n          {\r\n            day: 1,\r\n            title: \"Arrival and Orientation\",\r\n            description: \"Arrive in Zurich, transfer to hotel, welcome dinner and trip briefing\"\r\n          },\r\n          {\r\n            day: 2,\r\n            title: \"First Hike\",\r\n            description: \"Begin with a moderate trek to acclimatize to the altitude\"\r\n          }\r\n        ]\r\n      };\r\n    } catch (error) {\r\n      throw new Error('Failed to fetch trip details');\r\n    }\r\n  },\r\n\r\n  async createBooking(tripId, bookingData) {\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      return {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        tripId,\r\n        ...bookingData,\r\n        status: 'Confirmed'\r\n      };\r\n    } catch (error) {\r\n      throw new Error('Failed to create booking');\r\n    }\r\n  }\r\n};"],"mappings":"AAEA,OAAO,MAAMA,WAAW,GAAG;EACzB;EACA,MAAMC,WAAWA,CAACC,EAAE,EAAE;IACpB,IAAI;MACF;MACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO;QACLF,EAAE,EAAE,CAAC;QACLI,IAAI,EAAE,2BAA2B;QACjCC,WAAW,EAAE,yKAAyK;QACtLC,KAAK,EAAE,iBAAiB;QACxBC,KAAK,EAAE,IAAI;QACXC,cAAc,EAAE,EAAE;QAClBC,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE,UAAU;QACtBC,QAAQ,EAAE,YAAY;QACtBC,QAAQ,EAAE,CACR,oBAAoB,EACpB,qBAAqB,EACrB,WAAW,EACX,gBAAgB,EAChB,kBAAkB,CACnB;QACDC,kBAAkB,EAAE;UAClBC,UAAU,EAAE,EAAE;UACdC,UAAU,EAAE,CAAC;UACbC,QAAQ,EAAE;QACZ,CAAC;QACDC,SAAS,EAAE,CACT;UACEC,GAAG,EAAE,CAAC;UACNC,KAAK,EAAE,yBAAyB;UAChCd,WAAW,EAAE;QACf,CAAC,EACD;UACEa,GAAG,EAAE,CAAC;UACNC,KAAK,EAAE,YAAY;UACnBd,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;IACH,CAAC,CAAC,OAAOe,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,aAAaA,CAACC,MAAM,EAAEC,WAAW,EAAE;IACvC,IAAI;MACF,MAAM,IAAIvB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO;QACLF,EAAE,EAAEyB,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3CL,MAAM;QACN,GAAGC,WAAW;QACdK,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC,OAAOT,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}