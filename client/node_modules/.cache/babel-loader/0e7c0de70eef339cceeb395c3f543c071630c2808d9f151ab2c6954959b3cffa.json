{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Garg\\\\OneDrive\\\\Desktop\\\\exploro\\\\exploro-travel\\\\client\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\n// src/contexts/AuthContext.jsx\nimport React, { createContext, useState } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await authService.login(credentials);\n      if (response.token) {\n        localStorage.setItem('token', response.token);\n        // Assuming response includes user data with role\n        const userData = {\n          ...response.user,\n          role: response.user.role\n        };\n        setUser(userData);\n        return userData; // Return user data for role checking\n      } else {\n        throw new Error(response.msg || 'Login failed');\n      }\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const isOrganizer = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'organizer';\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await authService.register(userData);\n      console.log(\"HELLOO\");\n      console.log(response);\n      console.log(response.json);\n      console.log(response.data);\n      console.log(\"HELLO\");\n      if (response.token) {\n        localStorage.setItem('token', response.token);\n        setUser(response.user);\n      } else {\n        throw new Error(response.msg || 'Registration failed');\n      }\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      register,\n      loading,\n      isOrganizer,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"wJbgydKmzProwqZ2PuaEI7aaFyo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","login","credentials","response","token","localStorage","setItem","userData","role","Error","msg","err","message","isOrganizer","register","console","log","json","data","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Garg/OneDrive/Desktop/exploro/exploro-travel/client/src/contexts/AuthContext.jsx"],"sourcesContent":["// src/contexts/AuthContext.jsx\r\nimport React, { createContext, useState } from 'react';\r\nimport { authService } from '../services/api';\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await authService.login(credentials);\r\n      if (response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        // Assuming response includes user data with role\r\n        const userData = {\r\n          ...response.user,\r\n          role: response.user.role\r\n        };\r\n        setUser(userData);\r\n        return userData; // Return user data for role checking\r\n      } else {\r\n        throw new Error(response.msg || 'Login failed');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const isOrganizer = () => {\r\n    return user?.role === 'organizer';\r\n  };\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await authService.register(userData);\r\n      console.log(\"HELLOO\");\r\n      console.log(response);\r\n      console.log(response.json);\r\n      console.log(response.data);\r\n      console.log(\"HELLO\");\r\n      if (response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        setUser(response.user);\r\n      } else {\r\n        throw new Error(response.msg || 'Registration failed');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      login, \r\n      logout, \r\n      register, \r\n      loading, \r\n      isOrganizer,\r\n      error \r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACFJ,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMG,QAAQ,GAAG,MAAMf,WAAW,CAACa,KAAK,CAACC,WAAW,CAAC;MACrD,IAAIC,QAAQ,CAACC,KAAK,EAAE;QAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACC,KAAK,CAAC;QAC7C;QACA,MAAMG,QAAQ,GAAG;UACf,GAAGJ,QAAQ,CAACR,IAAI;UAChBa,IAAI,EAAEL,QAAQ,CAACR,IAAI,CAACa;QACtB,CAAC;QACDZ,OAAO,CAACW,QAAQ,CAAC;QACjB,OAAOA,QAAQ,CAAC,CAAC;MACnB,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAACN,QAAQ,CAACO,GAAG,IAAI,cAAc,CAAC;MACjD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZX,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC;MACrB,MAAMD,GAAG;IACX,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EACD,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxB,OAAO,CAAAlB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,MAAK,WAAW;EACnC,CAAC;EACD,MAAMM,QAAQ,GAAG,MAAOP,QAAQ,IAAK;IACnC,IAAI;MACFT,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMG,QAAQ,GAAG,MAAMf,WAAW,CAAC0B,QAAQ,CAACP,QAAQ,CAAC;MACrDQ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBD,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;MACrBY,OAAO,CAACC,GAAG,CAACb,QAAQ,CAACc,IAAI,CAAC;MAC1BF,OAAO,CAACC,GAAG,CAACb,QAAQ,CAACe,IAAI,CAAC;MAC1BH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,IAAIb,QAAQ,CAACC,KAAK,EAAE;QAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACC,KAAK,CAAC;QAC7CR,OAAO,CAACO,QAAQ,CAACR,IAAI,CAAC;MACxB,CAAC,MAAM;QACL,MAAM,IAAIc,KAAK,CAACN,QAAQ,CAACO,GAAG,IAAI,qBAAqB,CAAC;MACxD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZX,QAAQ,CAACW,GAAG,CAACC,OAAO,CAAC;MACrB,MAAMD,GAAG;IACX,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMqB,MAAM,GAAGA,CAAA,KAAM;IACnBd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChCxB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAC3B3B,IAAI;MACJM,KAAK;MACLkB,MAAM;MACNL,QAAQ;MACRjB,OAAO;MACPgB,WAAW;MACXd;IACF,CAAE;IAAAN,QAAA,EACCA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CA1EWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}